sports <-
readr::read_csv(
'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-03-29/sports.csv'
)
sports_cleaned <- sports %>%
filter(classification_name %in% c("NCAA Division I-FCS", "NCAA Division I-FBS")) %>%
filter(sector_name %in%
"Public, 4-year or above" | is.na(sector_name)) %>%
filter(sports %in% c("Basketball", "Football"))
sec_colleges <-
c(
"Auburn University",
"The University of Alabama",
"University of Arkansas",
"University of Florida",
"University of Georgia",
"University of Kentucky",
"Louisiana State University and Agricultural & Mechanical College",
"University of Mississippi",
"University of Mississippi",
"University of Missouri-Columbia",
"University of South Carolina-Columbia",
"The University of Tennessee-Knoxville",
"Texas A & M University-College Station",
"Vanderbilt University"
)
sec_sports <- sports %>%
filter(institution_name  %in%  sec_colleges) %>%
filter(sports %in% c("Basketball", "Football"))
texas <- sports_cleaned %>%
filter(institution_name == "Texas A & M University-College Station")
sec_logo <- magick::image_read("SEC_logo.png")
texas_logo <- magick::image_read("texas_logo.png")
png(
filename = "sec_sports.png",
width = 1500,
height = 1200,
units = "px",
bg = "white"
)
ggplot(sec_sports) +
aes(x = year,
y = total_rev_menwomen,
group = institution_name) +
geom_line(size = 1,
colour = "#112446",
alpha = 0.4) +
labs(
x = "Year",
y = "Total Revenue (in USD)",
title = "<span style='color: maroon;'>Texas A&M</span> vs SEC",
subtitle = "Comparing the total revenue generated from NCAA Football & NCAA Basketball <br> from 2015 to 2019 for the Universities/Colleges part of the South Eastern Conference. <br>
Texas A&M is represented in <span style='color: maroon;'>maroon</span>",
caption = "Source: NPR/TidyTuesday Graphic :  github.com/sidhuk"
) + theme(panel.grid.major = element_line(size = 0.8),
axis.text = element_text(size = 15)) +
ggthemes::theme_solarized_2() +
theme(
plot.title = element_text(size = 30,
face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16,
face = "italic", hjust = 0.5),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold.italic")
) +
facet_wrap(vars(sports), scales = "free", ncol = 1) +
geom_line(
data = texas,
aes(x = year, y = total_rev_menwomen, group = institution_name),
size = 2,
color = "maroon"
) +
geom_point(
data = texas,
aes(x = year, y = total_rev_menwomen, group = institution_name),
size = 3,
color = "maroon"
) +
theme(plot.title = element_markdown(),
plot.subtitle = element_markdown()) +
scale_y_continuous(labels = scales::comma)
grid::grid.raster(sec_logo,
x = 0.96,
y = 0.96,
width = unit(0.8, 'inches'))
grid::grid.raster(texas_logo,
x = 0.03,
y = 0.96,
width = unit(1.4, 'inches'))
dev.off()
ggsave("file.jpeg", device = "jpeg",width = 20,
height = 16,
dpi = 250)
ggplot(sec_sports) +
aes(x = year,
y = total_rev_menwomen,
group = institution_name) +
geom_line(size = 1,
colour = "#112446",
alpha = 0.4) +
labs(
x = "Year",
y = "Total Revenue (in USD)",
title = "<span style='color: maroon;'>Texas A&M</span> vs SEC",
subtitle = "Comparing the total revenue generated from NCAA Football & NCAA Basketball <br> from 2015 to 2019 for the Universities/Colleges part of the South Eastern Conference. <br>
Texas A&M is represented in <span style='color: maroon;'>maroon</span>",
caption = "Source: NPR/TidyTuesday Graphic :  github.com/sidhuk"
) + theme(panel.grid.major = element_line(size = 0.8),
axis.text = element_text(size = 15)) +
ggthemes::theme_solarized_2() +
theme(
plot.title = element_text(size = 30,
face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16,
face = "italic", hjust = 0.5),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
axis.text = element_text(size = 14),
strip.text = element_text(size = 16, face = "bold.italic")
) +
facet_wrap(vars(sports), scales = "free", ncol = 1) +
geom_line(
data = texas,
aes(x = year, y = total_rev_menwomen, group = institution_name),
size = 2,
color = "maroon"
) +
geom_point(
data = texas,
aes(x = year, y = total_rev_menwomen, group = institution_name),
size = 3,
color = "maroon"
) +
theme(plot.title = element_markdown(),
plot.subtitle = element_markdown()) +
scale_y_continuous(labels = scales::comma)
grid::grid.raster(sec_logo,
x = 0.96,
y = 0.96,
width = unit(0.8, 'inches'))
grid::grid.raster(texas_logo,
x = 0.03,
y = 0.96,
width = unit(1.4, 'inches'))
life_data <-
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%   ## make months
slice(4:(n()-9)) %>%  ## remove months in 1996 before my birth month (April)
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")
library(tidyverse)
library(lubridate)
library(waffle)
library(hrbrthemes)
life_data <-
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%   ## make months
slice(4:(n()-9)) %>%  ## remove months in 1996 before my birth month (April)
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")
View(life_data)
# Waffle chart-----
life_in_months <- life_data %>%
count(era) %>% ## the count of each era is the number of months in that era
ggplot(aes(fill = era, values = n)) +
geom_waffle(color = "#F7F7F7", n_rows = 12, size = 1, flip = TRUE) + ## make each row a year/12 months
scale_fill_manual(name = "", values = c("#EF476F","#FCA311","#FFD166","#0EAD69","#4ECDC4","#118AB2")) +  ## assign colors to the eras
coord_equal() +
theme_ipsum(grid = "") +
theme(legend.text = element_text(family = "Cooper Lt BT", size = 40),
plot.background = element_rect(fill = "#F7F7F7", color = "#F7F7F7")) +
theme_enhance_waffle()
source("~/Google Drive/Code/100_days_of_Code/Day_46/life_waffle.R", echo=TRUE)
source("~/Google Drive/Code/100_days_of_Code/Day_46/life_waffle.R", echo=TRUE)
library(tidyverse)
library(lubridate)
library(waffle)
library(hrbrthemes)
# Create the data-----
life_data <-
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%   ## make months
slice(4:(n()-9)) %>%  ## remove months in 1996 before my birth month (April)
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")  ## add column for row number
## add the "eras" to be colored in the waffle chart
life_data <- life_data %>%
mutate(era = fct_inorder(case_when(row_name < 161 ~ "Childhood - US",
row_name < 207 ~ "High School - PH",
row_name < 255 ~ "College - PH",
row_name < 285 ~ "Adulting - PH",
row_name < ((year(Sys.Date()) - 1996)*12) + (month(Sys.Date()) - 3) ~ "Adulting - US",
## months into "Adulting - US" based on current month
TRUE ~ "Time left")))
# Waffle chart-----
life_in_months <- life_data %>%
count(era) %>% ## the count of each era is the number of months in that era
ggplot(aes(fill = era, values = n)) +
geom_waffle(color = "#F7F7F7", n_rows = 12, size = 1, flip = TRUE) + ## make each row a year/12 months
scale_fill_manual(name = "", values = c("#EF476F","#FCA311","#FFD166","#0EAD69","#4ECDC4","#118AB2")) +  ## assign colors to the eras
coord_equal() +
theme_ipsum(grid = "") +
theme(legend.text = element_text(family = "Cooper Lt BT", size = 40),
plot.background = element_rect(fill = "#F7F7F7", color = "#F7F7F7")) +
theme_enhance_waffle()
life_in_months
# Save the chart
ggsave("life_in_months2.svg",  width = 15, height = 25, dpi = 300)
life_data <-
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%   ## make months
slice(12:(n()-9)) %>%  ## remove months in 1996 before my birth month (April)
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")  ## add column for row number
ibrary(tidyverse)
library(lubridate)
library(waffle)
library(hrbrthemes)
life_data <-
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%   ## make months
slice(12:(n()-9)) %>%  ## remove months in 1996 before my birth month (April)
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")  ## add column for row number
View(life_data)
View(life_in_months)
life_data <-
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%   ## make months
slice(12:(n()-9)) %>%  ## remove months in 1996 before my birth month (April)
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")  ## add column for row number
life_data <-
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%   ## make months
slice(12:(n()-9)) %>%  ## remove months in 1996 before my birth month (April)
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")  ## add column for row number
# Loading Packages
library(tidyverse)
library(lubridate)
library(waffle)
library(hrbrthemes)
# Create the data-----
life_data <-
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%   ## make months
slice(12:(n()-9)) %>%  ## remove months in 1996 before my birth month (April)
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")  ## add column for row number
## add the "eras" to be colored in the waffle chart
life_data <- life_data %>%
mutate(era = fct_inorder(case_when(row_name < 161 ~ "Childhood - US",
row_name < 207 ~ "High School - PH",
row_name < 255 ~ "College - PH",
row_name < 285 ~ "Adulting - PH",
row_name < ((year(Sys.Date()) - 1996)*12) +
(month(Sys.Date()) - 3) ~ "Adulting - US",
## months into "Adulting - US" based on current month
TRUE ~ "Time left")))
# Waffle chart-----
life_in_months <- life_data %>%
count(era) %>% ## the count of each era is the number of months in that era
ggplot(aes(fill = era, values = n)) +
geom_waffle(color = "#F7F7F7", n_rows = 12, size = 1, flip = TRUE) + ## make each row a year/12 months
scale_fill_manual(name = "", values = c("#EF476F","#FCA311","#FFD166","#0EAD69","#4ECDC4","#118AB2")) +  ## assign colors to the eras
coord_equal() +
theme_ipsum(grid = "") +
theme(legend.text = element_text(family = "Cooper Lt BT", size = 40),
plot.background = element_rect(fill = "#F7F7F7", color = "#F7F7F7")) +
theme_enhance_waffle()
life_in_months
# Save the chart
ggsave("life_in_months2.svg",  width = 15, height = 25, dpi = 300)
life_data <-
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%   ## make months
slice(12:(n()-9)) %>%  ## remove months in 1996 before my birth month (April)
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")  ## add column for row number
life_data <-
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%   ## make months
slice(4:(n()-9)) %>%  ## remove months in 1996 before my birth month (April)
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")  ## add column for row number
View(life_data)
life_data <-
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%   ## make months
slice(11:(n()-9)) %>%  ## remove months in 1996 before my birth month (April)
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")  ## add column for row number
View(life_data)
life_data <-
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%   ## make months
slice(11:(n()-9)) %>%  ## remove months in 1996 before my birth month (April)
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")  ## add column for row number
life_data <-
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%   ## make months
slice(12:(n()-0)) %>%  ## remove months in 1996 before my birth month (April)
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")  ## add column for row number
View(life_data)
4
life_data <-
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%   ## make months
slice(4:(n()-9)) %>%  ## remove months in 1996 before my birth month (April)
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")  ## add column for row number
life_data <-
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%   ## make months
slice(11:(n()-2)) %>%  ## remove months in 1996 before my birth month (April)
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")  ## add column for row number
View(life_data)
life_data <-
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%   ## make months
slice(12:(n()-1)) %>%  ## remove months in 1996 before my birth month (April)
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")  ## add column for row number
View(life_data)
life_data <-
# make months
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12]))
View(life_data)
life_data <-
# make months
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%
# remove months until December
slice(12:(n()-1)) %>%
# till 70 years
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")  ## add column for row number
life_2 <-
# make months
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12]))
View(life_2)
life_2 <-
# make months
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%
# remove months until December
slice(12:(n()-1)) %>%
View(life_2)
life_2 <-
# make months
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%
# remove months until December
slice(12:(n()-1))
View(life_2)
life_2 <-
# make months
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%
# remove months until December
slice(12:(n()-1)) %>%
# till 70 years
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
)
View(life_2)
life_data <-
# make months
tibble(months = factor(rep(month.abb[1:12], 77), levels=month.abb[1:12])) %>%
# remove months until December  (or start months from December)
slice(12:(n()-1)) %>%
# till 70 years
tibble(
age = rep(0:75, each = 12) ## age range: 1-70
) %>%
rowid_to_column("row_name")  ## add column for row number
View(life_data)
life_2 <-
# make months
tibble(months = factor(rep(month.abb[1:12], 72), levels=month.abb[1:12])) %>%
# remove months until December
slice(12:(n()-1)) %>%
# till 70 years
tibble(
age = rep(0:70, each = 12) ## age range: 1-70
)%>%
rowid_to_column("row_name")
View(life_2)
## add the "eras" to be colored in the waffle chart
life_data <- life_data %>%
mutate(era = fct_inorder(case_when(row_name < 165 ~ "Childhood",
row_name < 210 ~ "High School",
row_name < 268 ~ "Bachelor's",
row_name < 292 ~ "Master's",
row_name < ((year(Sys.Date()) - 1996)*12) +
(month(Sys.Date()) - 3) ~ "Adulting",
## months into "Adulting - US" based on current month
TRUE ~ "Time left")))
# Waffle chart-----
life_in_months <- life_data %>%
count(era) %>% ## the count of each era is the number of months in that era
ggplot(aes(fill = era, values = n)) +
geom_waffle(color = "#F7F7F7", n_rows = 12, size = 1, flip = TRUE) + ## make each row a year/12 months
scale_fill_manual(name = "", values = c("#EF476F","#FCA311","#FFD166","#0EAD69","#4ECDC4","#118AB2")) +  ## assign colors to the eras
coord_equal() +
theme_ipsum(grid = "") +
theme(legend.text = element_text(family = "Cooper Lt BT", size = 40),
plot.background = element_rect(fill = "#F7F7F7", color = "#F7F7F7")) +
theme_enhance_waffle()
life_in_months
# Save the chart
ggsave("life_in_months2.svg",  width = 15, height = 25, dpi = 300)
# Save the chart
ggsave("life_in_months2.svg",  width = 15, height = 25, dpi = 300)
life_in_months
# Save the chart
ggsave("life_in_months2.svg",  width = 15, height = 25, dpi = 300)
setwd("~/Google Drive/Code/100_days_of_Code/Day_46")
# Waffle chart-----
life_in_months <- life_data %>%
count(era) %>% ## the count of each era is the number of months in that era
ggplot(aes(fill = era, values = n)) +
geom_waffle(color = "#F7F7F7", n_rows = 12, size = 1, flip = TRUE) + ## make each row a year/12 months
scale_fill_manual(name = "", values = c("#EF476F","#FCA311","#FFD166","#0EAD69","#4ECDC4","#118AB2")) +  ## assign colors to the eras
coord_equal() +
theme_ipsum(grid = "") +
theme(legend.text = element_text(family = "Cooper Lt BT", size = 40),
plot.background = element_rect(fill = "#F7F7F7", color = "#F7F7F7")) +
theme_enhance_waffle()
life_in_months
# Save the chart
ggsave("life_in_months2.svg",  width = 15, height = 25, dpi = 300)
## add the "eras" to be colored in the waffle chart
life_data <- life_data %>%
mutate(era = fct_inorder(case_when(row_name < 165 ~ "Childhood",
row_name < 210 ~ "High School",
row_name < 268 ~ "Bachelor's",
row_name < 292 ~ "Master's",
row_name < ((year(Sys.Date()) - 1992)*12) +
(month(Sys.Date()) - 3) ~ "Adulting",
## months into "Adulting - US" based on current month
TRUE ~ "Time left")))
# Waffle chart-----
life_in_months <- life_data %>%
count(era) %>% ## the count of each era is the number of months in that era
ggplot(aes(fill = era, values = n)) +
geom_waffle(color = "#F7F7F7", n_rows = 12, size = 1, flip = TRUE) + ## make each row a year/12 months
scale_fill_manual(name = "", values = c("#EF476F","#FCA311","#FFD166","#0EAD69","#4ECDC4","#118AB2")) +  ## assign colors to the eras
coord_equal() +
theme_ipsum(grid = "") +
theme(legend.text = element_text(family = "Cooper Lt BT", size = 40),
plot.background = element_rect(fill = "#F7F7F7", color = "#F7F7F7")) +
theme_enhance_waffle()
# Waffle chart-----
life_in_months <- life_data %>%
count(era) %>% ## the count of each era is the number of months in that era
ggplot(aes(fill = era, values = n)) +
geom_waffle(color = "#F7F7F7", n_rows = 12, size = 1, flip = TRUE) + ## make each row a year/12 months
scale_fill_manual(name = "", values = c("#EF476F","#FCA311","#FFD166","#0EAD69","#4ECDC4","#118AB2")) +  ## assign colors to the eras
coord_equal() +
theme_ipsum(grid = "") +
theme(legend.text = element_text(family = "Cooper Lt BT", size = 40),
plot.background = element_rect(fill = "#F7F7F7", color = "#F7F7F7")) +
theme_enhance_waffle()
life_in_months
# Save the chart
ggsave("life_in_months2.svg",  width = 15, height = 25, dpi = 300)
## add the "eras" to be colored in the waffle chart
life_data <- life_data %>%
mutate(era = fct_inorder(case_when(row_name < 165 ~ "Childhood",
row_name < 210 ~ "High School",
row_name < 268 ~ "Bachelor's",
row_name < 292 ~ "Master's",
row_name < ((year(Sys.Date()) - 1992)*12) +
(month(Sys.Date()) - 11) ~ "Adulting",
## months into "Adulting - US" based on current month
TRUE ~ "Time left")))
# Waffle chart-----
life_in_months <- life_data %>%
count(era) %>% ## the count of each era is the number of months in that era
ggplot(aes(fill = era, values = n)) +
geom_waffle(color = "#F7F7F7", n_rows = 12, size = 1, flip = TRUE) + ## make each row a year/12 months
scale_fill_manual(name = "", values = c("#EF476F","#FCA311","#FFD166","#0EAD69","#4ECDC4","#118AB2")) +  ## assign colors to the eras
coord_equal() +
theme_ipsum(grid = "") +
theme(legend.text = element_text(family = "Cooper Lt BT", size = 40),
plot.background = element_rect(fill = "#F7F7F7", color = "#F7F7F7")) +
theme_enhance_waffle()
life_in_months
life_in_months
# Save the chart
ggsave("life_in_months2.svg",  width = 15, height = 25, dpi = 300)

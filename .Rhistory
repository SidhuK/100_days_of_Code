ggplot(aes(x =reorder(Author, count), y = count)) +
scale_x_continuous(breaks = seq(0, 13, by = 1))+
geom_col() +
coord_flip()
bestsellers %>%
group_by(Author) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
ggplot(aes(x =reorder(Author, count), y = count)) +
scale_x_discrete(breaks = seq(0, 13, by = 1))+
geom_col() +
coord_flip()
bestsellers %>%
group_by(Author) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
ggplot(aes(x =reorder(Author, count), y = count)) +
scale_x_discrete(breaks = seq(0, 13, by = 1))+
geom_col() +
coord_flip()
bestsellers %>%
group_by(Author) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
ggplot(aes(x =reorder(Author, count), y = count)) +
scale_y_continuous(breaks = seq(0, 13, by = 1))+
geom_col() +
coord_flip()
bestsellers %>%
group_by(Author) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
ggplot(aes(x =reorder(Author, count), y = count)) +
scale_y_continuous(breaks = seq(0, 13, by = 1))+
geom_col() +
coord_flip() +
theme_minimal()
bestsellers %>%
group_by(Author) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
ggplot(aes(x =reorder(Author, count), y = count)) +
scale_y_continuous(breaks = seq(0, 13, by = 1))+
geom_col() +
coord_flip() +
theme_minimal() +
theme(
panel.grid.minor = element_blank()
)
bestsellers %>%
group_by(Author) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
ggplot(aes(x =reorder(Author, count), y = count)) +
scale_y_continuous(breaks = seq(0, 13, by = 1))+
geom_col() +
coord_flip() +
theme_minimal() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()
)
bestsellers %>%
group_by(Author) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
ggplot(aes(x =reorder(Author, count), y = count)) +
scale_y_continuous(breaks = seq(0, 13, by = 1))+
geom_col() +
coord_flip() +
theme_minimal() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank()
)
bestsellers %>%
group_by(Author) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
ggplot(aes(x =reorder(Author, count), y = count,
fill = ifelse(count == max(count), "red","grey"))) +
scale_y_continuous(breaks = seq(0, 13, by = 1))+
geom_col() +
coord_flip() +
theme_minimal() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank()
)
bestsellers %>%
group_by(Author) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
ggplot(aes(x =reorder(Author, count), y = count,
fill = ifelse(count == max(count), "red","grey"))) +
scale_y_continuous(breaks = seq(0, 13, by = 1))+
geom_col() +
coord_flip() +
scale_fill_manual(values = c("#000000", "#ff9900")) +
theme_minimal() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank()
) +
bestsellers %>%
group_by(Author) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
ggplot(aes(x =reorder(Author, count), y = count,
fill = ifelse(count == max(count), "red","grey"))) +
scale_y_continuous(breaks = seq(0, 13, by = 1))+
geom_col() +
coord_flip() +
scale_fill_manual(values = c("#000000", "#ff9900")) +
theme_minimal() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank()
)
bestsellers %>%
group_by(Author) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
ggplot(aes(x =reorder(Author, count), y = count,
fill = ifelse(count == max(count), "red","grey"))) +
scale_y_continuous(breaks = seq(0, 13, by = 1))+
geom_col() +
coord_flip() +
scale_fill_manual(values = c("#000000", "#ff9900")) +
theme_minimal() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank()
)
bestsellers %>%
group_by(Author) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
ggplot(aes(x =reorder(Author, count), y = count,
fill = ifelse(count == max(count), "red","grey"))) +
scale_y_continuous(breaks = seq(0, 13, by = 1))+
geom_col() +
coord_flip() +
scale_fill_manual(values = c("#000000", "#ff9900")) +
theme_minimal() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = "none"
)
bestsellers %>%
group_by(Author) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
ggplot(aes(x =reorder(Author, count), y = count,
fill = ifelse(count == max(count), "red","grey"))) +
scale_y_continuous(breaks = seq(0, 13, by = 1))+
geom_col() +
coord_flip() +
scale_fill_manual(values = c("#000000", "#ff9900")) +
theme_minimal() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = "none",
axis.title.y = element_blank()
)
bestsellers %>%
filter(Author=="Jeff Kinney")
books %>%
select(Name, Reviews) %>%
arrange(desc(Reviews)) %>%
head(10)
bestsellers %>%
select(Name, Reviews) %>%
arrange(desc(Reviews)) %>%
head(10)
bestsellers %>%
select(Name, Reviews) %>%
arrange(desc(Reviews)) %>%
head(20) %>%
distinct()
bestsellers %>%
select(Name, User.Rating) %>%
arrange(desc(User.Rating)) %>%
head(20) %>%
distinct()
bestsellers %>%
select(Name, Price) %>%
arrange(desc(Price)) %>%
head(20) %>%
distinct()
bestsellers %>%
select(Name, Price) %>%
arrange(desc(Price)) %>%
head(20) %>%
distinct() %>%
ggplot(aes(x =reorder(Name, Price), y = Price,
fill = ifelse(Price == max(Price), "red","grey"))) +
geom_col() +
coord_flip() +
scale_fill_manual(values = c("#000000", "#ff9900")) +
theme_minimal() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = "none",
axis.title.y = element_blank()
)
bestsellers %>%
group_by(Name) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
ggplot(aes(x =reorder(Name, count), y = count,
fill = ifelse(count == max(count), "red","grey"))) +
geom_col() +
coord_flip() +
scale_fill_manual(values = c("#000000", "#ff9900")) +
theme_minimal() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = "none",
axis.title.y = element_blank()
)
bestsellers %>%
group_by(Name) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
ggplot(aes(x =reorder(Name, count), y = count,
fill = ifelse(count == max(count), "red","grey"))) +
scale_y_continuous(breaks = seq(0, 13, by = 1))+
geom_col() +
coord_flip() +
scale_fill_manual(values = c("#000000", "#ff9900")) +
theme_minimal() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = "none",
axis.title.y = element_blank()
)
library(factoextra)
data_kmeans <- bestsellers[2:5]
View(data_kmeans)
library(factoextra)
data_kmeans <- bestsellers[3:6]
View(data_kmeans)
library(factoextra)
data_kmeans <- bestsellers[3:6]
data_kmeans_scaled <- scale(data_kmeans)
View(data_kmeans_scaled)
library(factoextra)
data_kmeans <- bestsellers[3:6]
data_kmeans_scaled <- scale(data_kmeans)
data_kmeans <- dist(data_kmeans_scaled)
library(factoextra)
data_kmeans <- bestsellers[3:6]
data_kmeans_scaled <- scale(data_kmeans)
data_kmeans <- dist(data_kmeans_scaled)
fviz_nbclust(data_kmeans_scaled, kmeans,
method = "wss") + # wss means within sum squares
labs(subtitle = "Elbow Method")
kmeans_output <- kmeans(data_kmeans_scaled, centers = 3, nstart = 100)
kmeans_output <- kmeans(data_kmeans_scaled, centers = 3, nstart = 100)
kmeans_output.clusters <- kmeans_output$cluster
kmeans_output <- kmeans(data_kmeans_scaled, centers = 3, nstart = 100)
kmeans_output.clusters <- kmeans_output$cluster
rownames(data_kmeans_scaled) <- paste(bestsellers$Name, 1:dim(iris)[1], sep="_")
kmeans_output <- kmeans(data_kmeans_scaled, centers = 5, nstart = 100)
kmeans_output.clusters <- kmeans_output$cluster
rownames(data_kmeans_scaled) <- paste(bestsellers$Name, 1:dim(iris)[1], sep="_")
fviz_cluster(list(data = data_kmeans_scaled, cluster = kmeans_output.clusters)) +
theme_minimal() +
theme(plot.subtitle = element_text(size = 12,
face = "italic"),
plot.caption = element_text(size = 9),
plot.title = element_text(size = 15,
face = "bold")
) + labs(
title = "K-Means Output Cluster Plot",
x = "Dimension 1 (73%)",
y = "Dimensio }2 (22.9%)",
colour = "Cluster",
fill = "Cluster",
shape = "Cluster",
subtitle = "Output results for the K-Means clustering algorithm for the IRIS dataset",
caption = "Data: Iris Dataset
Code: Made in R"
)
fviz_cluster(list(data = data_kmeans_scaled, cluster = kmeans_output.clusters)) +
theme_minimal() +
theme(plot.subtitle = element_text(size = 12,
face = "italic"),
plot.caption = element_text(size = 9),
plot.title = element_text(size = 15,
face = "bold")
) + labs(
colour = "Cluster",
fill = "Cluster",
shape = "Cluster",
)
kmeans_output <- kmeans(data_kmeans_scaled, centers = 3, nstart = 100)
kmeans_output.clusters <- kmeans_output$cluster
rownames(data_kmeans_scaled) <- paste(bestsellers$Name, 1:dim(iris)[1], sep="_")
fviz_cluster(list(data = data_kmeans_scaled, cluster = kmeans_output.clusters)) +
theme_minimal() +
theme(plot.subtitle = element_text(size = 12,
face = "italic"),
plot.caption = element_text(size = 9),
plot.title = element_text(size = 15,
face = "bold")
) + labs(
colour = "Cluster",
fill = "Cluster",
shape = "Cluster",
)
table(kmeans_output.clusters, bestsellers$Name)
fviz_cluster(list(data = data_kmeans_scaled, cluster = kmeans_output.clusters)) +
theme_minimal() +
theme(plot.subtitle = element_text(size = 12,
face = "italic"),
plot.caption = element_text(size = 9),
plot.title = element_text(size = 15,
face = "bold")
) + labs(
colour = "Cluster",
fill = "Cluster",
shape = "Cluster",
)
res <- hcut(data_kmeans, k = 4, stand = TRUE)
# Visualize
fviz_dend(data_kmeans, rect = TRUE, cex = 0.5,
k_colors = c("#00AFBB","#2E9FDF", "#E7B800", "#FC4E07"))
res <- hcut(bestsellers, k = 4, stand = TRUE)
View(data_kmeans_scaled)
View(data_kmeans_scaled)
res <- hcut(data_kmeans, k = 4, stand = TRUE)
# Visualize
fviz_dend(data_kmeans, rect = TRUE, cex = 0.5,
k_colors = c("#00AFBB","#2E9FDF", "#E7B800", "#FC4E07"))
res <- hcut(data_kmeans_scaled, k = 4, stand = TRUE)
# Visualize
fviz_dend(data_kmeans, rect = TRUE, cex = 0.5,
k_colors = c("#00AFBB","#2E9FDF", "#E7B800", "#FC4E07"))
# Visualize
fviz_dend(data_kmeans, rect = TRUE)
# Visualize
fviz_dend(res, rect = TRUE)
res <- hcut(data_kmeans_scaled, k = 4, stand = TRUE)
# Visualize
fviz_dend(res, rect = TRUE)
data_kmeans <- bestsellers[3:6]
View(data_kmeans)
data_kmeans <- bestsellers[3:6, 1:20]
data_kmeans %>%
slice(1:20)
data_kmeans <- bestsellers[3:6]
data_kmeans <- data_kmeans %>%
slice(1:20)
library(factoextra)
data_kmeans <- bestsellers[3:6]
data_kmeans <- data_kmeans %>%
slice(1:20)
data_kmeans_scaled <- scale(data_kmeans)
data_kmeans <- dist(data_kmeans_scaled)
fviz_nbclust(data_kmeans_scaled, kmeans,
method = "wss") + # wss means within sum squares
labs(subtitle = "Elbow Method")
kmeans_output <- kmeans(data_kmeans_scaled, centers = 4, nstart = 100)
kmeans_output.clusters <- kmeans_output$cluster
rownames(data_kmeans_scaled) <- paste(bestsellers$Name %>%
slice(1:20), 1:dim(iris)[1], sep="_")
kmeans_output <- kmeans(data_kmeans_scaled, centers = 4, nstart = 100)
kmeans_output.clusters <- kmeans_output$cluster
rownames(data_kmeans_scaled) <- paste(bestsellers$Name, 1:dim(iris)[1], sep="_")
kmeans_output <- kmeans(data_kmeans_scaled, centers = 4, nstart = 100)
kmeans_output.clusters <- kmeans_output$cluster
rownames(data_kmeans_scaled) <- paste(bestsellers$Name, 1:dim(bestsellers)[1], sep="_")
kmeans_output <- kmeans(data_kmeans_scaled, centers = 4, nstart = 100)
kmeans_output.clusters <- kmeans_output$cluster
fviz_cluster(list(data = data_kmeans_scaled, cluster = kmeans_output.clusters)) +
theme_minimal() +
theme(plot.subtitle = element_text(size = 12,
face = "italic"),
plot.caption = element_text(size = 9),
plot.title = element_text(size = 15,
face = "bold")
) + labs(
colour = "Cluster",
fill = "Cluster",
shape = "Cluster",
)
res <- hcut(data_kmeans_scaled, k = 4, stand = TRUE)
# Visualize
fviz_dend(res, rect = TRUE)
bestsellers_mini <- bestsellers %>%
slice(1:20)
rownames(data_kmeans_scaled) <- paste(bestsellers_mini$Name, 1:dim(bestsellers_mini)[1], sep="_")
fviz_cluster(list(data = data_kmeans_scaled, cluster = kmeans_output.clusters)) +
theme_minimal() +
theme(plot.subtitle = element_text(size = 12,
face = "italic"),
plot.caption = element_text(size = 9),
plot.title = element_text(size = 15,
face = "bold")
) + labs(
colour = "Cluster",
fill = "Cluster",
shape = "Cluster",
)
table(kmeans_output.clusters, bestsellers_mini$Name)
res <- hcut(data_kmeans_scaled, k = 4, stand = TRUE)
# Visualize
fviz_dend(res, rect = TRUE)
```{r}
fviz_cluster(list(data = data_kmeans_scaled, cluster = kmeans_output.clusters)) +
theme_minimal() +
theme(plot.subtitle = element_text(size = 12,
face = "italic"),
plot.caption = element_text(size = 9),
plot.title = element_text(size = 15,
face = "bold")
) + labs(
colour = "Cluster",
fill = "Cluster",
shape = "Cluster",
)
res <- hcut(data_kmeans_scaled, k = 4, stand = TRUE)
# Visualize
fviz_dend(res, rect = TRUE)
# Visualize
fviz_dend(res, rect = TRUE) +
theme_minimal()
# Visualize
fviz_dend(res, rect = TRUE) +
theme_minimal() +
scale_y_continuous(breaks = seq(-5, 9, by = 1))
# Visualize
fviz_dend(res, rect = TRUE) +
theme_minimal() +
scale_y_continuous(breaks = seq(-7, 9, by = 1))
# Visualize
fviz_dend(res, rect = TRUE, cex = 0.5) +
theme_minimal() +
scale_y_continuous(breaks = seq(-7, 9, by = 1))
# Visualize
fviz_dend(res, rect = TRUE, cex = 0.3) +
theme_minimal() +
scale_y_continuous(breaks = seq(-7, 9, by = 1))
# Visualize
fviz_dend(res, rect = TRUE, cex = 0.3) +
theme_minimal()
res <- hcut(data_kmeans_scaled, k = 4, stand = TRUE)
# Visualize
fviz_dend(res, rect = TRUE, cex = 0.3,
k_colors = c("#00AFBB","#2E9FDF", "#E7B800", "#FC4E07")) +
theme_minimal()
res <- hcut(data_kmeans_scaled, k = 4, stand = TRUE)
# Visualize
fviz_dend(res, rect = TRUE, cex = 0.3,
k_colors = c("#00AFBB","#2E9FDF", "#E7B800", "#FC4E07")) +
theme_minimal()
kmeans_output <- kmeans(data_kmeans_scaled, centers = 3, nstart = 100)
kmeans_output.clusters <- kmeans_output$cluster
bestsellers_mini <- bestsellers %>%
slice(1:20)
rownames(data_kmeans_scaled) <- paste(bestsellers_mini$Name, 1:dim(bestsellers_mini)[1], sep="_")
fviz_cluster(list(data = data_kmeans_scaled, cluster = kmeans_output.clusters)) +
theme_minimal() +
theme(plot.subtitle = element_text(size = 12,
face = "italic"),
plot.caption = element_text(size = 9),
plot.title = element_text(size = 15,
face = "bold")
) + labs(
colour = "Cluster",
fill = "Cluster",
shape = "Cluster",
)
test <- table(kmeans_output.clusters, bestsellers_mini$Name))
test <- table(kmeans_output.clusters, bestsellers_mini$Name)
test
as.tibble(test)
as.data.frame(test)
fviz_cluster(list(data = data_kmeans_scaled, cluster = kmeans_output.clusters)) +
theme_minimal() +
theme(plot.subtitle = element_text(size = 12,
face = "italic"),
plot.caption = element_text(size = 9),
plot.title = element_text(size = 15,
face = "bold")
) + labs(
colour = "Cluster",
fill = "Cluster",
shape = "Cluster",
)

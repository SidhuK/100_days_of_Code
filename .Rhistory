high = "brown"
,breaks=c(50,150,250,350,450))
games_data %>%
group_by(Year, Platform) %>%
summarise(Total_Games = n()) %>%
arrange(Year) %>%
ggplot(aes(x = Year, y=Platform, fill = Total_Games)) +
geom_tile() +
scale_fill_gradient2(
low = "darkgreen",
mid = "white",
high = "brown"
,breaks=c(50,150,250,350,450))
games_data %>%
group_by(Year, Platform) %>%
summarise(Total_Games = n()) %>%
arrange(Year) %>%
ggplot(aes(x = Year, y=Platform, fill = Total_Games)) +
geom_tile() +
scale_fill_gradient2(
low = "darkgreen",
mid = "white",
high = "brown"
)
games_data %>%
group_by(Year, Platform) %>%
summarise(Total_Games = n()) %>%
arrange(Year) %>%
ggplot(aes(x = Year, y=Platform, fill = Total_Games)) +
geom_tile() +
scale_fill_gradient2(low = "darkgreen", mid = "white", high = "brown")
games_data %>%
group_by(Year, Platform) %>%
summarise(Total_Games = n()) %>%
arrange(Year) %>%
ggplot(aes(x = Year, y=Platform, fill = Total_Games)) +
geom_tile() +
scale_fill_gradient2(low = "darkgreen", mid = "white", high = "darkred")
games_data %>%
group_by(Year, Platform) %>%
summarise(Total_Games = n()) %>%
arrange(Year) %>%
ggplot(aes(x = Year, y=Platform, fill = Total_Games)) +
geom_tile()
games_data %>%
group_by(Year, Platform) %>%
summarise(Total_Games = n()) %>%
arrange(Year) %>%
ggplot(aes(x = Year, y=Platform, fill = Total_Games)) +
geom_tile() +
scale_fill_gradient2(low = "darkgreen", mid = "white", high = "darkred")
games_data %>%
group_by(Year, Platform) %>%
summarise(Total_Games = n()) %>%
arrange(Year) %>%
ggplot(aes(x = Year, y=Platform, fill = Total_Games)) +
geom_tile() +
scale_fill_gradient2(low = "darkgreen", mid = "white", high = "darkred", midpoint = "200")
games_data %>%
group_by(Year, Platform) %>%
summarise(Total_Games = n()) %>%
arrange(Year) %>%
ggplot(aes(x = Year, y=Platform, fill = Total_Games)) +
geom_tile() +
scale_fill_gradient2(low = "darkgreen", mid = "white", high = "darkred", midpoint = 200)
games_data %>%
group_by(Year, Platform) %>%
summarise(Total_Games = n()) %>%
arrange(Year) %>%
ggplot(aes(x = Year, y=Platform, fill = Total_Games)) +
geom_tile() +
scale_fill_gradient2(low = "darkgreen", mid = "white", high = "darkred", midpoint = 300)
games_data %>%
group_by(Year, Platform) %>%
summarise(Total_Games = n()) %>%
arrange(Year) %>%
ggplot(aes(x = Year, y=Platform, fill = Total_Games)) +
geom_tile() +
scale_fill_gradient2(low = "darkgreen", mid = "white", high = "darkred", midpoint = 300) +
theme_minimal()
games_data %>%
group_by(Publisher) %>%
summarise(Total_Games = sum())
games_data %>%
group_by(Publisher) %>%
summarise(Total_Games = sum()) %>%
arrange(desc(Total_Games))
games_data %>%
group_by(Publisher) %>%
summarise(Total_Games = n()) %>%
arrange(desc(Total_Games))
games_data %>%
group_by(Publisher) %>%
summarise(Total_Games = n()) %>%
arrange(desc(Total_Games)) %>%
head(10)
games_data %>%
group_by(Publisher) %>%
summarise(Total_Games = n()) %>%
arrange(desc(Total_Games)) %>%
head(10) %>%
ggplot(aes(x = Publisher, y= Total_Games)) +
geom_col()
games_data %>%
group_by(Publisher) %>%
summarise(Total_Games = n()) %>%
arrange(desc(Total_Games)) %>%
head(10) %>%
ggplot(aes(x = Publisher, y= Total_Games, fill = Publisher)) +
geom_col()
publisher <- games_data %>%
group_by(Publisher) %>%
summarise(Total_Games = n()) %>%
arrange(desc(Total_Games)) %>%
head(10)
esquisse:::esquisser()
ggplot(publisher, aes(x = Publisher, fill = Publisher, y = Total_Games)) +
geom_bar() +
scale_fill_manual(
values = c(Activision = "#E41A1C",
`Electronic Arts` = "#5D6795",
`Konami Digital Entertainment` = "#43997A",
`Namco Bandai Games` = "#658E67",
Nintendo = "#A35390",
Sega = "#F37912",
`Sony Computer Entertainment` = "#FFD422",
`Take-Two Interactive` = "#D7B32E",
THQ = "#B85F49",
Ubisoft = "#F781BF")
) +
labs(y = "Number of Games") +
coord_flip() +
theme_minimal() +
theme(legend.position = "none")
ggplot(publisher, aes(x = Publisher, fill = Publisher, y = Total_Games)) +
geom_col() +
scale_fill_manual(
values = c(Activision = "#E41A1C",
`Electronic Arts` = "#5D6795",
`Konami Digital Entertainment` = "#43997A",
`Namco Bandai Games` = "#658E67",
Nintendo = "#A35390",
Sega = "#F37912",
`Sony Computer Entertainment` = "#FFD422",
`Take-Two Interactive` = "#D7B32E",
THQ = "#B85F49",
Ubisoft = "#F781BF")
) +
labs(y = "Number of Games") +
coord_flip() +
theme_minimal() +
theme(legend.position = "none")
ggplot(publisher, aes(x = reorder(Publisher, -Total_Games), fill = Publisher, y = Total_Games)) +
geom_col() +
scale_fill_manual(
values = c(Activision = "#E41A1C",
`Electronic Arts` = "#5D6795",
`Konami Digital Entertainment` = "#43997A",
`Namco Bandai Games` = "#658E67",
Nintendo = "#A35390",
Sega = "#F37912",
`Sony Computer Entertainment` = "#FFD422",
`Take-Two Interactive` = "#D7B32E",
THQ = "#B85F49",
Ubisoft = "#F781BF")
) +
labs(y = "Number of Games") +
coord_flip() +
theme_minimal() +
theme(legend.position = "none")
ggplot(publisher, aes(x = reorder(Publisher, Total_Games), fill = Publisher, y = Total_Games)) +
geom_col() +
scale_fill_manual(
values = c(Activision = "#E41A1C",
`Electronic Arts` = "#5D6795",
`Konami Digital Entertainment` = "#43997A",
`Namco Bandai Games` = "#658E67",
Nintendo = "#A35390",
Sega = "#F37912",
`Sony Computer Entertainment` = "#FFD422",
`Take-Two Interactive` = "#D7B32E",
THQ = "#B85F49",
Ubisoft = "#F781BF")
) +
labs(y = "Number of Games") +
coord_flip() +
theme_minimal() +
theme(legend.position = "none")
ggplot(publisher, aes(x = reorder(Publisher, Total_Games), fill = Publisher, y = Total_Games)) +
geom_col() +
scale_fill_manual(
values = c(Activision = "#E41A1C",
`Electronic Arts` = "#5D6795",
`Konami Digital Entertainment` = "#43997A",
`Namco Bandai Games` = "#658E67",
Nintendo = "#A35390",
Sega = "#F37912",
`Sony Computer Entertainment` = "#FFD422",
`Take-Two Interactive` = "#D7B32E",
THQ = "#B85F49",
Ubisoft = "#F781BF")
) +
labs(y = "Number of Games",
x = "Publisher") +
coord_flip() +
theme_minimal() +
theme(legend.position = "none")
num_Sales=game[,c("NA_Sales","EU_Sales","JP_Sales","Other_Sales","Global_Sales")]
num_Sales=games_data[,c("NA_Sales","EU_Sales","JP_Sales","Other_Sales","Global_Sales")]
cor(num_Sales)
View(num_Sales)
install.packages("ggcorrplot")
ggcorrplot::ggcorrplot(correlation)
ggcorrplot::ggcorrplot(correlation)
ggcorrplot::ggcorrplot()
ggcorrplot::ggcorrplot(correlation)
num_Sales=games_data[,c("NA_Sales","EU_Sales","JP_Sales","Other_Sales","Global_Sales")]
correlation <- cor(num_Sales)
num_Sales=games_data[,c("NA_Sales","EU_Sales","JP_Sales","Other_Sales","Global_Sales")]
correlation <- cor(num_Sales)
ggcorrplot::ggcorrplot(correlation)
ggcorrplot::ggcorrplot(correlation)
ggcorrplot::ggcorrplot(correlation, hc.order = TRUE, outline.col = "white")
ggcorrplot::ggcorrplot(correlation, hc.order = TRUE, outline.col = "white",
type = "lower")
ggcorrplot::ggcorrplot(correlation, hc.order = TRUE, outline.col = "white",
type = "lower",
colors = c("#6D9EC1", "white", "#E46726"))
ggcorrplot::ggcorrplot(correlation, hc.order = TRUE, outline.col = "white",
type = "lower",
colors = c("#6D9EC1", "white", "#E46726"))
ggcorrplot::ggcorrplot(correlation, hc.order = TRUE, outline.col = "white",
type = "lower",
colors = c("#6D9EC1", "white", "#E46726"),
lab = TRUE)
ggcorrplot::ggcorrplot(correlation, hc.order = TRUE, outline.col = "white",
type = "lower",
colors = c("#6D9EC1", "white", "#E46726"),
lab = TRUE,
ggtheme = theme_minimal())
num_Sales=games_data[,c("NA_Sales","EU_Sales","JP_Sales","Other_Sales","Global_Sales")]
correlation <- cor(num_Sales)
ggcorrplot::ggcorrplot(correlation, hc.order = TRUE, outline.col = "white",
type = "lower",
colors = c("#6D9EC1", "white", "#E46726"),
lab = TRUE,
ggtheme = theme_minimal())
setwd("~/Google Drive/Code/100_days_of_Code/Day_60")
enter_number = as.integer(readline(prompt = "Enter a Number to check if it passes the
Luhn Algorithm test: "))
enter_number = as.integer(readline(prompt = "Enter a Number to check if it passes the Luhn Algorithm test: "))
function(input)
enter_number <-  (readline(prompt = "Enter a Number to check if it passes the Luhn Algorithm test: ")
split_string <- stringr::str_split(enter_number)
enter_number <-  (readline(prompt = "Enter a Number to check if it passes the Luhn Algorithm test: "))
split_string <- stringr::str_split(enter_number)
enter_number <-  (readline(prompt = "Enter a Number to check if it passes the Luhn Algorithm test: "))
no_spaces <- stringr::str_replace_all(enter_number, " ","")
nospaces
no_spaces
enter_number <-  (readline(prompt = "Enter a Number to check if it passes the Luhn Algorithm test: "))
as_digits <- as.integer(stringr::str_replace_all(enter_number, " ","")[[1]])
as_digits <- as.integer(stringr::str_split(stringr::str_replace_all(enter_number, " ",""))[[1]])
as_digits <- as.integer(stringr::str_split(stringr::str_replace_all(enter_number, " ",""), "")[[1]])
enter_number <-  (readline(prompt = "Enter a Number to check if it passes the Luhn Algorithm test: "))
remove_spaces <- stringr::str_replace_all(enter_number," ", "")
as_digits <- as.integer(stringr::str_split(remove_spaces,"")[[1]])
as_digits
# Convert into a list od digits
digits <- as.integer(stringr::str_split(remove_spaces,"")[[1]])
digits
if (length(digits) < 2 || anyNA(digits)) {
FALSE
} else {
doublers <- rev(rep(c(FALSE, TRUE), length.out = length(digits)))
digits[doublers] <- 2  * digits[doublers]
digits[digits > 9] <- digits[digits > 9] - 9
sum(digits) %% 10 == 0
}
# If length of digits is false, or doesnt contain digits, then return f
if (length(digits) < 2 || anyNA(digits)) {
FALSE
}
else {
doublers <- rev(rep(c(FALSE, TRUE), length.out = length(digits)))
digits[doublers] <- 2  * digits[doublers]
digits[digits > 9] <- digits[digits > 9] - 9
sum(digits) %% 10 == 0
}
# If length of digits is false, or doesnt contain digits, then return f
if (length(digits) < 2 || anyNA(digits)) {
FALSE
} else {
doublers <- rev(rep(c(FALSE, TRUE), length.out = length(digits)))
digits[doublers] <- 2  * digits[doublers]
digits[digits > 9] <- digits[digits > 9] - 9
sum(digits) %% 10 == 0
}
# Ask for an input
enter_number <-  (readline(prompt = "Enter a Number to check if it passes the Luhn Algorithm test: "))
# Remove spaces from the input
remove_spaces <- stringr::str_replace_all(enter_number," ", "")
# Convert into a list of digits
digits <- as.integer(stringr::str_split(remove_spaces,"")[[1]])
# If length of digits is false, or doesnt contain digits, then return f
if (length(digits) < 2 || anyNA(digits)) {
FALSE
} else {
doublers <- rev(rep(c(FALSE, TRUE), length.out = length(digits)))
digits[doublers] <- 2  * digits[doublers]
digits[digits > 9] <- digits[digits > 9] - 9
sum(digits) %% 10 == 0
}
digits
rstudioapi::addTheme('https://raw.githubusercontent.com/johnnybarrels/rstudio-one-dark-pro-theme/master/OneDarkPro.rstheme', apply=TRUE, force=TRUE)
install.packages(c("blob", "bookdown", "broom", "extrafont", "formatR", "haven", "lme4", "magrittr", "phosphoricons", "RColorBrewer", "RcppEigen", "rprojroot", "scales", "skimr", "vctrs", "zoo"))
?rsthemes
library(rsthemes)
rsthemes::list_rsthemes()
install.packages(c("haven", "vctrs", "zoo"))
.Library
library(readxl)
library(ggplot2)
library(d3heatmap)
library(readxl)
library(ggplot2)
library(BiocVersion)
library(readxl)
library(ggplot2)
library(PCAtools)
library(corrplot)
setwd("~/Google Drive/Code/R_for_Metabolomics/correlation_matrix")
library(corrplot)
library(tidyverse)
library(corrplot)
library(tidyverse)
metabolites <- read.csv("metabolites.csv")
head(metabolites)
correlation_plot <-cor(t(metabolites))
correlation_plot <-cor((metabolites))
corrplot(metabolites, type="upper", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 1)
metabolties <- as.matrix(metabolites[, -1])
View(metabolties)
metabolties <- as.matrix(metabolites[, -1])
rownames(metabolites) <- metabolites$compound
View(metabolties)
metabolites <- as.matrix(metabolites[, -1])
rownames(metabolites) <- metabolites$compound
View(metabolites)
metabolites <- as.matrix(metabolites[, -1])
rownames(metabolites) <- metabolites$compound
metabolites_df <- as.matrix(metabolites[, -1])
rownames(metabolites_df) <- metabolites$compound
metabolites <- read.csv("metabolites.csv")
head(metabolites)
metabolites_df <- as.matrix(metabolites[, -1])
rownames(metabolites_df) <- metabolites$compound
correlation_plot <-cor(t(metabolites_df))
corrplot(correlation_plot, type="upper", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 1)
library(corrplot)
library(tidyverse)
library(RColorBrewer)
correlation_plot <-cor(t(metabolites_df))
corrplot(correlation_plot, type="upper", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 1)
metabolites <- read.csv("metabolites.csv")
head(metabolites)
metabolites_df <- as.matrix(metabolites[, -1])
rownames(metabolites_df) <- metabolites$compound
View(metabolites_df)
correlation_plot <-cor(t(metabolites_df))
corrplot(correlation_plot, type="upper", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 1)
correlation_plot <-cor(t(metabolites_df))
corrplot(correlation_plot, type="upper", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"))
View(correlation_plot)
{plot.new(); dev.off()}
{plot.new(); dev.off()}
correlation_plot <-cor(t(metabolites_df))
corrplot(correlation_plot, type="upper", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 1)
metabolites <- read.csv("metabolites.csv")
head(metabolites)
metabolites_df <- as.matrix(metabolites[, -1])
rownames(metabolites_df) <- metabolites$compound
correlation_plot <-cor(t(metabolites_df))
corrplot(correlation_plot, type="upper", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 1)
View(metabolites)
library(corrplot)
library(tidyverse)
library(RColorBrewer)
metabolites <- read.csv("metabolites.csv")
head(metabolites)
metabolites_df <- as.matrix(metabolites[, -1])
rownames(metabolites_df) <- metabolites$compound
correlation_plot <-cor(t(metabolites_df))
corrplot(correlation_plot, type="upper", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 1)
plot.new()
correlation_plot <-cor(t(metabolites_df))
corrplot(correlation_plot, type="upper", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 1)
metabolites <- read.csv("metabolites2.csv")
head(metabolites)
metabolites_df <- as.matrix(metabolites[, -1])
rownames(metabolites_df) <- metabolites$compound
correlation_plot <-cor(t(metabolites_df))
corrplot(correlation_plot, type="upper", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 1)
corrplot(correlation_plot, type="upper", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 0.5)
metabolites <- read.csv("metabolites.csv")
head(metabolites)
metabolites_df <- as.matrix(metabolites[, -1])
rownames(metabolites_df) <- metabolites$compound
correlation_plot <-cor(t(metabolites_df))
corrplot(correlation_plot, type="upper", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 0.5)
corrplot(correlation_plot, type="upper", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 0.1)
corrplot(correlation_plot, type="lower", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 0.1)
corrplot(correlation_plot, type="lower", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 0.3)
library(corrplot)
library(tidyverse)
library(RColorBrewer)
metabolites <- read.csv("metabolites.csv")
head(metabolites)
metabolites_df <- as.matrix(metabolites[, -1])
rownames(metabolites_df) <- metabolites$compound
correlation_plot <-cor(t(metabolites_df))
corrplot(correlation_plot, type="lower", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 0.3)
ggsave("correlation.png", plot=last_plot(), width = 20, height = 20, dpi = 200)
setwd("~/Google Drive/Code/R_for_Metabolomics/correlation_matrix")
library(corrplot)
ggsave("correlation.png", plot=last_plot(), width = 20, height = 20, dpi = 200)
corrplot(correlation_plot, type="lower", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 0.3)
ggsave("correlation.png", plot=last_plot(), width = 20, height = 20, dpi = 200)
corrplot(correlation_plot, type="lower", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 0.4)
correlation_1 <- corrplot(correlation_plot, type="lower", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 0.4)
ggsave("correlation.png", plot=correlation_1, width = 20, height = 20, dpi = 200)
png(filename = "correlation_plot.png", width = 15, height = 15, dpi= 200)
png(filename = "correlation_plot.png", width = 1500, height = 1500, units = px)
png(filename = "correlation_plot.png", width = 1500, height = 1500, units = "px")
correlation_1 <- corrplot(correlation_plot, type="lower", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 0.4)
dev.off()
png(filename = "correlation_plot.png", width = 1500, height = 1500, units = "px")
correlation_1 <- corrplot(correlation_plot, type="lower", order="hclust",method = "square",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 1)
dev.off()
png(filename = "correlation_plot.png", width = 1500, height = 1500, units = "px")
correlation_1 <- corrplot(correlation_plot, type="lower", order="hclust",method = "color",
col=brewer.pal(n=8, name="RdYlBu"), tl.cex = 1)
dev.off()
png(filename = "correlation_plot.png", width = 1500, height = 1500, units = "px")
correlation_1 <- corrplot(correlation_plot, type="lower", order="hclust",method = "color",
col=brewer.pal(n=8, name="RdYlBu"),addgrid.col = "darkgray", tl.cex = 1)
dev.off()
png(filename = "correlation_plot.png", width = 2000, height = 2000, units = "px")
correlation_1 <- corrplot(correlation_plot, type="lower", order="hclust",method = "color",
col=brewer.pal(n=8, name="RdYlBu"),addgrid.col = "darkgray", tl.cex = 1)
dev.off()
png(filename = "correlation_plot.png", width = 2000, height = 2000, units = "px")
correlation_1 <- corrplot(correlation_plot, type="lower", order="hclust",method = "color",
col=brewer.pal(n=8, name="RdYlBu"),addgrid.col = "darkgray", addCoef.col = "white", tl.cex = 1)
dev.off()
png(filename = "correlation_plot.png", width = 2000, height = 2000, units = "px")
correlation_1 <- corrplot(correlation_plot, type="lower", order="hclust",method = "color",
col=brewer.pal(n=8, name="RdYlBu"),addgrid.col = "darkgray", outline = "black", tl.cex = 1)
dev.off()
correlation_1 <- corrplot(correlation_plot, type="lower", order="hclust",method = "color",
col=brewer.pal(n=8, name="RdYlBu"),addgrid.col = "darkgray", outline = T, tl.cex = 1)
dev.off()
png(filename = "correlation_plot.png", width = 2000, height = 2000, units = "px")
correlation_1 <- corrplot(correlation_plot, type="lower", order="hclust",method = "color",
col=brewer.pal(n=8, name="RdYlBu"),addgrid.col = "darkgray", outline = T, tl.cex = 1)
dev.off()
png(filename = "correlation_plot.png", width = 2000, height = 2000, units = "px")
correlation_1 <- corrplot(correlation_plot, type="lower", order="hclust",method = "color",
col=brewer.pal(n=8, name="RdYlBu"),addgrid.col = "darkgray", outline = T, tl.cex = 1)
dev.off()
png(filename = "correlation_plot.png", width = 2000, height = 2000, units = "px")
correlation_1 <- corrplot(correlation_plot, type="lower", order="hclust",method = "color",
col=brewer.pal(n=8, name="RdYlBu"),addgrid.col = "darkgray", outline = T, tl.cex = 1)
dev.off()
png(filename = "correlation_plot.png", width = 2000, height = 2000, units = "px")
correlation_1 <- corrplot(correlation_plot, type="lower", order="hclust",method = "color",
col=brewer.pal(n=8, name="RdYlBu"),addgrid.col = "darkgray", outline = T, tl.cex = 1, t1.color = "black")
dev.off()
correlation_1 <- corrplot(correlation_plot, type="lower", order="hclust",method = "color",
col=brewer.pal(n=8, name="RdYlBu"),addgrid.col = "darkgray", outline = T, tl.cex = 1, t1.col = "black")
dev.off()
png(filename = "correlation_plot.png", width = 2000, height = 2000, units = "px")
correlation_1 <- corrplot(correlation_plot, type="lower", order="hclust",method = "color",
col=brewer.pal(n=8, name="RdYlBu"),addgrid.col = "darkgray", outline = T, tl.cex = 1, t1.col = "black")
png(filename = "correlation_plot.png", width = 2000, height = 2000, units = "px")
correlation_1 <- corrplot(correlation_plot, type="lower", order="hclust",method = "color",
col=brewer.pal(n=8, name="RdYlBu"),addgrid.col = "darkgray", outline = T, tl.cex = 1, tl.col = "black")
dev.off()
View(metabolites_df)
View(correlation_plot)
setwd("~/Google Drive/Code/100_days_of_Code")

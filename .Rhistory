head(5) %>%
ggplot(aes(
x = reorder(`Title`, `Runtime`),
y = `Runtime`,
fill = ifelse(Runtime == min(`Runtime`), "red", "black"))) +
geom_col() +
labs(title = "Shortest Movies") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
coord_flip() +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 25,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank())
netflix %>%
ggplot(aes(x=`IMDB.Score`, y= Runtime)) +
geom_point() +
geom_smooth(method = lm,colour = "#E50914") +
labs(title = "Correlation between Runtime and IMDB Rating") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 25,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank())
netflix %>%
ggplot(aes(x=`IMDB.Score`, y= Runtime)) +
geom_point() +
geom_smooth(method = lm,colour = "#E50914") +
labs(title = "Runtime vs IMDB Rating") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 25,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank())
res <- t.test(Runtime ~ `IMDB.Score`, data = netflix, var.equal = TRUE)
res <- t.test(Runtime ~ `IMDB.Score`, data = netflix, var.equal = TRUE)
res <- lm(Runtime ~ `IMDB.Score`, data = netflix, var.equal = TRUE)
lm(data = netflix, formula = Runtime ~ `IMDB.Score`)
model <- lm(data = netflix, formula = Runtime ~ `IMDB.Score`)
summary(model)
model <- lm(data = netflix, formula = Runtime ~ `IMDB.Score`)
summary(model)
netflix %>%
ggplot(aes(x=`IMDB.Score`, y= Runtime)) +
geom_point() +
geom_smooth(method = lm,colour = "#E50914") +
labs(title = "Runtime vs IMDB Rating") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 25,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank())
?lm
res <- cor.test(netflix$Runtime, netflix$IMDB.Score,
method = "pearson")
res <- cor.test(netflix$Runtime, netflix$IMDB.Score,
method = "pearson")
res
res$p.value
res$estimate
netflix %>%
group_by(Date) %>%
summarise(total = n()) %>%
ggplot(aes(
x = Date,
y = total,
fill = ifelse(total == max(total), "red","grey")))  +
geom_col() +
labs(title = "Netflix Movies released by Date of each month") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 25,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
)
netflix %>%
group_by(Day) %>%
summarise(total = n()) %>%
ggplot(aes(
x = Day,
y = total,
fill = ifelse(total == max(total), "red","black"))) +
geom_col() +
labs(title = "Netflix Movies released by day of the week") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 25,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank()
)
netflix %>%
group_by(Language) %>%
summarise(Movies = n()) %>%
arrange(desc(Movies)) %>%
head(5) %>%
ggplot(aes(
x = reorder(Language, -Movies),
y = Movies,
fill = ifelse(Movies == max(Movies), "red", "black"))) +
geom_col() +
labs(title = "Most Popular Languages") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 25,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank())
netflix %>%
arrange(desc(`IMDB.Score`)) %>%
head(5) %>%
ggplot(aes(
x = reorder(`Title`, `IMDB.Score`),
y = `IMDB.Score`,
fill = ifelse(`IMDB.Score` == max(`IMDB.Score`), "red", "black"))) +
geom_col() +
labs(title = "Highest Rated Movies") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
coord_flip() +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 25,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank())
netflix %>%
arrange(desc(-`IMDB.Score`)) %>%
head(5) %>%
ggplot(aes(
x = reorder(`Title`, -`IMDB.Score`),
y = `IMDB.Score`,
fill = ifelse(`IMDB.Score` == min(`IMDB.Score`), "red", "black"))) +
geom_col() +
labs(title = "Lowest Rated Movies") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
coord_flip() +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 25,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank())
netflix %>%
ggplot(aes(x = Runtime)) +
geom_dotplot(binwidth = 2.25,
fill = "#2d2d2d",
color = "#e9ecef") +
labs(title = "Movie Runtime") +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 25,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank()
)
netflix %>%
arrange(desc(Runtime)) %>%
head(5) %>%
ggplot(aes(
x = reorder(`Title`, `Runtime`),
y = `Runtime`,
fill = ifelse(Runtime == max(`Runtime`), "red", "black"))) +
geom_col() +
labs(title = "Longest Movies") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
coord_flip() +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 25,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank())
netflix %>%
arrange(desc(-Runtime)) %>%
head(5) %>%
ggplot(aes(
x = reorder(`Title`, `Runtime`),
y = `Runtime`,
fill = ifelse(Runtime == min(`Runtime`), "red", "black"))) +
geom_col() +
labs(title = "Shortest Movies") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
coord_flip() +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 25,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank())
netflix %>%
ggplot(aes(x=`IMDB.Score`, y= Runtime)) +
geom_point() +
geom_smooth(method = lm,colour = "#E50914") +
labs(title = "Runtime vs IMDB Rating") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 25,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank())
netflix %>%
arrange(desc(-Runtime)) %>%
head(5) %>%
ggplot(aes(
x = reorder(`Title`, `Runtime`),
y = `Runtime`,
fill = ifelse(Runtime == min(`Runtime`), "red", "black"))) +
geom_col() +
labs(title = "Shortest Movies") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
coord_flip() +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 25,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank(),
text = element_text(size = 20))
netflix %>%
group_by(Language) %>%
summarise(Movies = n()) %>%
arrange(desc(Movies)) %>%
head(5) %>%
ggplot(aes(
x = reorder(Language, -Movies),
y = Movies,
fill = ifelse(Movies == max(Movies), "red", "black"))) +
geom_col() +
labs(title = "Most Popular Languages") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 25,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank(),
text = element_text(size = 20)))
netflix %>%
group_by(Language) %>%
summarise(Movies = n()) %>%
arrange(desc(Movies)) %>%
head(5) %>%
ggplot(aes(
x = reorder(Language, -Movies),
y = Movies,
fill = ifelse(Movies == max(Movies), "red", "black"))) +
geom_col() +
labs(title = "Most Popular Languages") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 25,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank(),
text = element_text(size = 20))
netflix %>%
group_by(Language) %>%
summarise(Movies = n()) %>%
arrange(desc(Movies)) %>%
head(5) %>%
ggplot(aes(
x = reorder(Language, -Movies),
y = Movies,
fill = ifelse(Movies == max(Movies), "red", "black"))) +
geom_col() +
labs(title = "Most Popular Languages") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 30,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank(),
text = element_text(size = 20))
netflix %>%
group_by(Genre) %>%
summarise(Movies = n()) %>%
arrange(desc(Movies)) %>%
head(5) %>%
ggplot(aes(
x = reorder(Genre, -Movies),
y = Movies,
fill = ifelse(Movies == max(Movies), "red", "black"))) +
geom_col() +
labs(title = "Most Popular Genres") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 30,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank(),
text = element_text(size = 20)))
netflix %>%
group_by(Genre) %>%
summarise(Movies = n()) %>%
arrange(desc(Movies)) %>%
head(5) %>%
ggplot(aes(
x = reorder(Genre, -Movies),
y = Movies,
fill = ifelse(Movies == max(Movies), "red", "black"))) +
geom_col() +
labs(title = "Most Popular Genres") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 30,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank(),
text = element_text(size = 20))
netflix %>%
group_by(Day) %>%
summarise(total = n()) %>%
ggplot(aes(
x = Day,
y = total,
fill = ifelse(total == max(total), "red","black"))) +
geom_col() +
labs(title = "Netflix Movies released by day of the week") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 30,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank(),
text = element_text(size = 20))
netflix %>%
group_by(Date) %>%
summarise(total = n()) %>%
ggplot(aes(
x = Date,
y = total,
fill = ifelse(total == max(total), "red","grey")))  +
geom_col() +
labs(title = "Netflix Movies released by Date of each month") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 30,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
text = element_text(size = 20))
panel.grid.major.x = element_blank(),
netflix %>%
group_by(Month) %>%
summarise(total = n()) %>%
ggplot(aes(
x = Month,
y = total,
fill = ifelse(total == max(total), "red","grey"))) +
geom_col() +
labs(title = "Netflix Movies released each month") +
theme_minimal() +
scale_fill_manual(values = c( "#2d2d2d", "#E50914")) +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 30,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank(),
text = element_text(size = 20))
netflix %>%
group_by(Year) %>%
summarise(total = n()) %>%
ggplot(aes(
x = Year,
y = total,
fill = ifelse(total == max(total), "red","grey"))) +
geom_col() +
labs(title = "Netflix Movies released each year") +
theme_minimal() +
scale_fill_manual(values = c("#2d2d2d", "#E50914")) +
theme(
legend.position = "none",
plot.title = element_text(
family = "Bebas Neue",
size = 35,
colour = "#E50914"
),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor  = element_blank(),
text = element_text(size = 20))
